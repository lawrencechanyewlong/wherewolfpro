

.container{:style => "margin-top: 0px;"}
    %h1 Select Contacts
    %p Please check the contacts you would like to send to or add contacts that are not currently in your contact list.
    - if flash[:notice]
        .alert-message.warning
            %p= flash[:notice]
  
    = form_tag event_select_contacts_path, :method => :get, :id => 'add_form' do
        %input.form-control{:id => "add_name", :placeholder => "Add Name", :type => "text", :name => "name", :required => true}/
        %input.form-control{:id => "add_email", :placeholder => "Add Email", :type => "text", :name => "email", :required => true}/            
        %button.btn.btn-default.btn-block{:type => "submit"} Add Contact


    
    - if @receiver

        = form_tag event_select_duration_path, :method => :get, :id => 'ratings_form' do
            %ul.list-group
                - (0...@receiver.size).each do |i|
                    %li.list-group-item
                        .input-group
                            %span#basic-addon2.input-group-addon 
                                = "#{@receiver_name[i]} : #{@receiver[i]}"
                            %span.input-group-addon
                                %input.receivers{"aria-label" => "...", :type => "checkbox", :id => "receiver_#{i}", :value => "#{@receiver_name[i]}, #{@receiver[i]}"}/
                        / = contact
                        / = check_box_tag "info[#{contact}]", :id => "info_#{contact}"
    
        / - @contacts = []
        / = link_to "contacts", "/contacts/gmail"
        
:javascript
    function post(path, params, method) {
        method = method || "post"; // Set method to post by default if not specified.

        // The rest of this code assumes you are not using a library.
        // It can be made less wordy if you use one.
        var form = document.createElement("form");
        form.setAttribute("method", method);
        form.setAttribute("action", path);

        for(var key in params) {
            if(params.hasOwnProperty(key)) {
                var hiddenField = document.createElement("input");
                hiddenField.setAttribute("type", "hidden");
                hiddenField.setAttribute("name", key);
                hiddenField.setAttribute("value", params[key]);

                form.appendChild(hiddenField);
             }
        }

        document.body.appendChild(form);
        console.log('submit');
        console.log(path);
        form.submit(); 
      }
      
      function submit_form() {
        var checks = document.getElementsByClassName('receivers');
        var selected_names = [];
        var selected_emails = [];
        for (var i = 0; i < checks.length; i++) {
            if (checks[i].checked) {
                console.log(checks[i].value)
                var s = checks[i].value.split(', ');
                var name = s[0];
                var email = s[1];
                selected_names.push(name);
                selected_emails.push(email);
            }
        }
        console.log(selected_names);
        console.log(selected_emails);
        post("", { receiver: selected_emails, receiver_name: selected_names});
      }    

%nav.navbar.navbar-fixed-bottom{:style => "background: #000; padding: 20px"}
    .container
        .row
            .col-xs-3
                %a.btn.btn-danger{:href => "/event/select_destination"} 
                    %span.glyphicon.glyphicon-arrow-left{"aria-hidden" => "true"}
                    %span Back
            .col-xs-6
            .col-xs-3
                %a.btn.btn-success{:onclick => "submit_form();return false;", :href => "/event/select_duration"}
                    %span Next
                    %span.glyphicon.glyphicon-arrow-right{"aria-hidden" => "true"}
